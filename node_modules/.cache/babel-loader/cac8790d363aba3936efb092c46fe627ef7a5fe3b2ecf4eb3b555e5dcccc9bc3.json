{"ast":null,"code":"import{useState}from\"react\";function useCounter(){const[count,setCount]=useState(0);const minusHandler=()=>{setCount(prior=>{if(prior>0){return prior-1;}else{return prior;}});};const plusHandler=()=>{setCount(prior=>prior+1);};return{count,minusHandler,plusHandler};}export default useCounter;","map":{"version":3,"names":["useState","useCounter","count","setCount","minusHandler","prior","plusHandler"],"sources":["C:/Users/ganks/projects/jo/src/tools/useCounter.tsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport interface CounterSet {\r\n    count: number,\r\n    minusHandler: () => void,\r\n    plusHandler: () => void,\r\n}\r\n\r\nfunction useCounter(): CounterSet {\r\n    const [count, setCount] = useState<number>(0);\r\n    const minusHandler = (): void => {\r\n        setCount((prior: number): number => {\r\n            if(prior > 0) {\r\n                return prior - 1;\r\n            }\r\n            else {\r\n                return prior;\r\n            }\r\n        });\r\n    };\r\n    const plusHandler = (): void => {\r\n        setCount((prior: number): number => prior + 1);\r\n    };\r\n\r\n    return {\r\n        count,\r\n        minusHandler,\r\n        plusHandler,\r\n    };\r\n}\r\n\r\nexport default useCounter;"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAQhC,QAAS,CAAAC,UAAUA,CAAA,CAAe,CAC9B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGH,QAAQ,CAAS,CAAC,CAAC,CAC7C,KAAM,CAAAI,YAAY,CAAGA,CAAA,GAAY,CAC7BD,QAAQ,CAAEE,KAAa,EAAa,CAChC,GAAGA,KAAK,CAAG,CAAC,CAAE,CACV,MAAO,CAAAA,KAAK,CAAG,CAAC,CACpB,CAAC,IACI,CACD,MAAO,CAAAA,KAAK,CAChB,CACJ,CAAC,CAAC,CACN,CAAC,CACD,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAY,CAC5BH,QAAQ,CAAEE,KAAa,EAAaA,KAAK,CAAG,CAAC,CAAC,CAClD,CAAC,CAED,MAAO,CACHH,KAAK,CACLE,YAAY,CACZE,WACJ,CAAC,CACL,CAEA,cAAe,CAAAL,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}